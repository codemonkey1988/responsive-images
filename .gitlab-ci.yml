stages:
  - lint
  - test
  - mirror

lint-php:
  stage: lint
  image: registry.gitlab.com/codemonkey1988/docker-composer-image:2-php$PHP_VERSION
  except:
    - master
  script:
    - find . -name \*.php ! -path "./.Build/*" -exec php -d display_errors=stderr -l {} > /dev/null \;
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]

codestyle-php:
  stage: lint
  except:
    - master
  image: registry.gitlab.com/codemonkey1988/docker-composer-image:2-php7.4
  before_script:
    - mkdir -p .composer/cache
    - COMPOSER_CACHE_DIR=.composer/cache composer install
  script:
    - composer phpcsfixer
  cache:
    key: composer-cache
    paths:
      - .composer/cache

php:phpstan:
  stage: lint
  except:
    - master
  image: registry.gitlab.com/codemonkey1988/docker-composer-image:2-php7.4
  before_script:
    - mkdir -p .composer/cache
    - COMPOSER_CACHE_DIR=.composer/cache composer require typo3/minimal="$TYPO3_VERSION"
    - echo '<?php return [];' > .Build/Web/typo3conf/LocalConfiguration.php
  script:
    - composer phpstan
  cache:
    key: composer-cache
    paths:
      - .composer/cache
  parallel:
    matrix:
      - TYPO3_VERSION: '^11'
        PHP_VERSION: [ '7.4', '8.0', '8.1' ]
      - TYPO3_VERSION: '^10'
        PHP_VERSION: [ '7.4' ]

unit-tests:
  stage: test
  except:
    - master
  image: registry.gitlab.com/codemonkey1988/docker-composer-image:2-php$PHP_VERSION
  variables:
    TYPO3_VERSION: ^10.4
    PHP_VERSION: "7.4"
  before_script:
    - docker-php-ext-enable xdebug
    - echo -e "xdebug.mode=coverage" > /usr/local/etc/php/conf.d/xdebug_coverage.ini
    - mkdir -p .composer/cache
    - COMPOSER_CACHE_DIR=.composer/cache composer require typo3/minimal="$TYPO3_VERSION"
    - echo '<?php return [];' > .Build/Web/typo3conf/LocalConfiguration.php
  script:
    - |
      .Build/bin/phpunit \
        -c UnitTests.xml \
        --colors \
        --testdox \
        --coverage-html build/reports/coverage-unit-html/ \
        --coverage-cobertura build/reports/cobertura-unit.xml \
        --coverage-clover build/reports/clover-unit.xml
  parallel:
    matrix:
      - TYPO3_VERSION: '^11'
        PHP_VERSION: [ '7.4', '8.0', '8.1' ]
      - TYPO3_VERSION: '^10'
        PHP_VERSION: [ '7.4' ]
  cache:
    key: composer-cache
    paths:
      - .composer/cache
  artifacts:
    expire_in: 1 day
    paths:
      - build/reports/
    when: always
    reports:
      junit: build/reports/phpunit-unit.xml
      coverage_report:
        coverage_format: cobertura
        path: build/reports/cobertura-unit.xml

cypress-tests:
  stage: test
  only:
    - main
    - v3
  interruptible: true
  variables:
    GIT_STRATEGY: clone
  tags:
    - ddev
  before_script:
    - mkdir -p $CI_PROJECT_DIR/.Build/Web/typo3conf/
    - ddev config --auto --php-version=$PHP_VERSION --omit-containers=dba --database=$DATABASE
    - ddev start -y
    - ddev composer require typo3/minimal="$TYPO3_VERSION"
    - ddev typo3cms install:setup --skip-integrity-check
    - ddev mysql < $CI_PROJECT_DIR/Tests/Cypress/Fixtures/test-data.sql
    - nvm install 18 && nvm use 18
    - cd $CI_PROJECT_DIR/build/ && npm ci && npx cypress install
  script:
    - cd $CI_PROJECT_DIR/build/ && npx cypress run --headless --e2e --browser chrome
  after_script:
    -  ddev rm -RO
  parallel:
    matrix:
      - TYPO3_VERSION: '^11'
        PHP_VERSION: [ '8.1' ]
        DATABASE: [ 'mariadb:10.8' ]
      - TYPO3_VERSION: '^10'
        PHP_VERSION: [ '7.4' ]
        DATABASE: [ 'mariadb:10.5' ]
  artifacts:
    expire_in: 1 day
    paths:
      - build/cypress/screenshots/
      - build/reports/
    when: always
    reports:
      junit: build/reports/cypress-integration*.xml

mirror:
  stage: mirror
  image: registry.gitlab.com/codemonkey1988/docker-composer-image:2-php7.4
  only:
    - main
    - tags
  variables:
    GIT_STRATEGY: none
  script:
    - git clone $CI_REPOSITORY_URL -b main repo && cd repo
    - git config user.name "$GIT_USER_NAME"
    - git config user.email "$GIT_USER_EMAIL"
    - git checkout master && git merge --ff main
    - git push https://$GITLAB_USERNAME:M2_$GITLAB_TOKEN@$GITLAB_REPOSITORY
    - git push -f --mirror https://$GITHUB_USERNAME:ghp_$GITHUB_TOKEN@$GITHUB_REPOSITORY
